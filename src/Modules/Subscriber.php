<?php

namespace Mobbex\Modules;

class Subscriber
{
    /** Platform identifier for subscriber */
    public $reference;

    /** Module configured options */
    public $settings = [];

    /** Raw mobbex response data */
    public $response;

    /** Mobbex identifier for subscriber */
    public $uid;

    /** URL to change or add payment method */
    public $sourceUrl;

    /** URL to modify subscriber configuration */
    public $controlUrl;

    /**
     * Constructor.
     * 
     * @param string $reference Identifier to relate mobbex with platform.
     * @param string $uid Id generated by mobbex.
     * @param string $subscriptionUid Parent subscription uid.
     * @param string $startDate Subscription next period date.
     * @param array $customer {
     *     @type string $name
     *     @type string $email
     *     @type string $identification
     *     @type string|null $phone
     *     @type string|int|null $uid
     * }
     * @param int|float $total Amount to charge.
     * @param string $hookName Name of hook to execute when body is filtered.
     */
    public function __construct(
        $reference,
        $uid,
        $subscriptionUid,
        $startDate,
        $customer,
        $total = null,
        $hookName = 'mobbexSubscriberRequest'
    ) {
        $this->settings = \Mobbex\Platform::$settings;

        // Make request and set response data as properties
        $this->setResponse(\Mobbex\Api::request([
            'uri'    => 'subscriptions/' . $subscriptionUid . '/subscriber/' . $uid,
            'method' => 'POST',
            'body'   => \Mobbex\Platform::hook($hookName, true, [
                'total'     => $total,
                'reference' => $this->reference = (string) $reference,
                'test'      => (bool) $this->settings['test'],
                'startDate' => [
                    'day'   => date('d', strtotime($startDate)),
                    'month' => date('m', strtotime($startDate)),
                    'year'  => date('y', strtotime($startDate)),
                ],
                $uid ? 'customerData' : 'customer'  => $customer,
            ]),
        ]));
    }

    /**
     * Set response data as class properties.
     * 
     * @param array $response
     */
    public function setResponse($response)
    {
        $this->response   = $response;
        $this->uid        = isset($this->response['uid'])           ? $this->response['uid']           : null;
        $this->sourceUrl  = isset($this->response['sourceUrl'])     ? $this->response['sourceUrl']     : null;
        $this->controlUrl = isset($this->response['subscriberUrl']) ? $this->response['subscriberUrl'] : null;
    }
}